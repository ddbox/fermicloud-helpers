#!/bin/bash
# from https://gist.github.com/thomasdarimont/46358bc8167fce059d83a1ebdb92b0e7
# modified to optionally read from stdin and to print both parts of the token

decode_base64_url() {
  local len=$((${#1} % 4))
  local result="$1"
  if [ $len -eq 2 ]; then result="$1"'=='
  elif [ $len -eq 3 ]; then result="$1"'='
  fi
  echo "$result" | tr '_-' '/+' | base64 --decode
}

decode_jwt() {
    TOKEN=$1
    decode_base64_url "`echo "$TOKEN"|cut -d. -f1`" | jq .
    decode_base64_url "`echo "$TOKEN"|cut -d. -f2`" | jq .
}

human_dates() {
    for w in "$@"; do
        echo $w | grep -iE '{|}|"'
        if [ "$?" -ne 0 ]; then
            w1=$(echo $w | sed -e s'/,//')
            if echo $w1 | grep -vq "[a-zA-Z]"; then
               d=$(date -j -f "%s" $w1)
               echo '"'$d'"'
               if echo $w | grep -q ',' ; then
                   echo ','
               fi
            else
                echo $w
            fi
        fi
    done
}

if [ $# = 0 ];then
    read TOKEN
elif [ -f "$1" ]; then
    TOKEN=$(cat $1)
else
    TOKEN="$1"
fi

JWT="$(decode_jwt $TOKEN)"
#echo $JWT | jq .
READABLE="$(human_dates $JWT)"
#echo $READABLE
echo $READABLE | jq .
